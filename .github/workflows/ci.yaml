name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Run cargo test
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.toml') }}
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev
      - name: Install Mujoco
        run: mkdir ~/.local; wget https://github.com/deepmind/mujoco/releases/download/2.3.0/mujoco-2.3.0-linux-x86_64.tar.gz; tar -xf mujoco-2.3.0-linux-x86_64.tar.gz -C ~/.local; mv ~/.local/mujoco-2.3.0/ ~/.local/mujoco; sudo cp ~/.local/mujoco/lib/libmujoco.so /usr/lib/libmujoco.so; sudo cp ~/.local/mujoco/lib/libmujoco.so.2.3.0 /usr/lib/libmujoco.so.2.3.0
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  build-on-windows:
    name: Build On Windows
    runs-on: windows-latest
    env:
      RUSTFLAGS: -Ctarget-feature=+crt-static
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.toml') }}
        # - name: Install Rustup using win.rustup.rs
        #   run: |
        #     # Disable the download progress bar which can cause perf issues
        #     $ProgressPreference = "SilentlyContinue"
        #     Invoke-WebRequest https://win.rustup.rs/ -OutFile rustup-init.exe
        #     .\rustup-init.exe -y --default-host=x86_64-pc-windows-msvc --default-toolchain=none
        #     del rustup-init.exe
        #     rustup target add ${{ matrix.target }}
        #   shell: powershell
        # - name: Add mingw32 to path for i686-gnu
        #   run: |
        #     echo "C:\msys64\mingw32\bin" >> $GITHUB_PATH
        #   if: matrix.target == 'i686-pc-windows-gnu' && matrix.channel == 'nightly'
        #   shell: bash
        # - name: Add mingw64 to path for x86_64-gnu
        #   run: echo "C:\msys64\mingw64\bin" >> $GITHUB_PATH
        #   if: matrix.target == 'x86_64-pc-windows-gnu' && matrix.channel == 'nightly'
        # shell: bash
      - name: Install mujoco
        run: |
          $ProgressPreference = "SilentlyContinue"
          Invoke-WebRequest https://github.com/deepmind/mujoco/releases/download/2.3.0/mujoco-2.3.0-windows-x86_64.zip -OutFile mujoco.zip
          7z x -y mujoco.zip -o"C:\Program Files\MuJoCo" | Out-Null
          del mujoco.zip
      - name: Build and Test
        shell: cmd
        run: ci\build.bat

  # Run cargo clippy -- -D warnings
  clippy_check:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.toml') }}
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy
          override: true
      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev
      - name: Install Mujoco
        run: mkdir ~/.local; wget https://github.com/deepmind/mujoco/releases/download/2.3.0/mujoco-2.3.0-linux-x86_64.tar.gz; tar -xf mujoco-2.3.0-linux-x86_64.tar.gz -C ~/.local; mv ~/.local/mujoco-2.3.0/ ~/.local/mujoco; sudo cp ~/.local/mujoco/lib/libmujoco.so /usr/lib/libmujoco.so; sudo cp ~/.local/mujoco/lib/libmujoco.so.2.3.0 /usr/lib/libmujoco.so.2.3.0
      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings

  # Run cargo fmt --all -- --check
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt
          override: true
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check --config newline_style=Unix
